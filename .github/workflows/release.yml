name: Release

on: [push, workflow_dispatch]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # for testing
      matrix:
        os: [ubuntu-20.04, macos-11]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD: cp311-*
          CIBW_SKIP: "*-musllinux*"
          #   CIBW_ARCHS_MACOSg: "x86_64 arm64"
          CIBW_ARCHS_MACOS: arm64
          CIBW_ARCHS_LINUX: x86_64
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux_2_28
          CIBW_ENVIRONMENT_LINUX: LD_LIBRARY_PATH="/usr/local/lib64:${LD_LIBRARY_PATH}"
          CIBW_BEFORE_ALL_LINUX: |
            dnf install -y epel-release
            dnf config-manager --enable epel
            dnf install -y sudo cmake eigen3-devel gcc gcc-c++ wget hdf5-devel
            bash build-moab
            echo "LD_LIBRARY_PATH: ${LD_LIBRARY_PATH}"

          CIBW_BEFORE_BUILD_MACOS:
            | # Must happen before each build as builds have different architectures
            set -eu
            ARCH=$(echo $ARCHFLAGS | cut -d ' ' -f 2)
            echo "ARCH: $ARCH"
            if [ "$ARCH" == "arm64" ]; then
                PACKAGES=(eigen hdf5)
                for PACKAGE in "${PACKAGES[@]}"
                do
                    brew fetch --force --bottle-tag=arm64_big_sur $PACKAGE
                    brew install $(brew --cache --bottle-tag=arm64_big_sur $PACKAGE)
                done
            else
                brew install eigen hdf5
            fi
            export CMAKE_OSX_ARCHITECTURES=$ARCH
            # bash build-eigen
            # bash build-hdf5
            bash build-moab

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
